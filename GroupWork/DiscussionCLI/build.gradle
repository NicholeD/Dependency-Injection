plugins {
    id 'ata-curriculum.snippets-conventions'
}

checkstyle {
    def suppressionFile = rootProject.file('Utilities/ATACheckstyle/configuration/checkstyle/unit1/suppressions.xml')
    configProperties.put('checkstyle.suppression.filter', suppressionFile)
}

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/KenzieAcademy-SoftwareEngineering/kenzie-java-test-infrastructure")
        credentials {
            username = "kenzie-gradle"
            password = "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"
        }
    }
}

dependencies {
    implementation 'com.kenzie:kenzieresources:1.0.1'
    // Use JUnit test framework.
    api 'com.google.dagger:dagger:2.40.5'
    implementation 'com.google.dagger:dagger:2.40.5'
    annotationProcessor('com.google.dagger:dagger-compiler:2.40.5')
    testImplementation(platform('org.junit:junit-bom:5.8.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

def wflowToTestsMap = [
        'groupwork-discussioncli-test': [
            'com.kenzie.groupwork.discussioncli.*'
        ]
]

wflowToTestsMap.forEach { wflowName, testList ->
    tasks.register(wflowName) {
        dependsOn wflowtest
        test.doFirst {
            filter {
                testList.each { includeTestsMatching it }
            }
        }
    }
}

def wflowToMainClassMap = [
        'groupwork-discussion-cli': 'com.kenzie.groupwork.discussioncli.cli.DiscussionCliRunner'
]
wflowToMainClassMap.forEach { wflowName, mainClass ->
    tasks.register(wflowName) {
        runMain.mainClass.set(mainClass)
        dependsOn runMain
    }
}
